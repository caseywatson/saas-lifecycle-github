{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "pat": {
            "type": "securestring",
            "metadata": {
                "description": "The personal access token (PAT) Edgar should use to access GitHub."
            }
        },
        "repo_owner": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The GitHub user or organization that owns the repos that Edgar should choose from when dispatching a request."
            }
        },
        "name": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 13,
            "metadata": {
                "description": "The name of this Edgar deployment."
            }
        }
    },
    "variables": {
        "name": "[toLower(if(empty(parameters('name')), uniqueString(resourceGroup().id), parameters('name')))]",
        "appInsightsName": "[concat(variables('name'), '-insights')]",
        "appServicePlanName": "[concat(variables('name'), '-plan')]",
        "eventGridTopicName": "[concat(variables('name'), '-events')]",
        "functionAppName": "[concat('edgar-', variables('name'))]",
        "storageAccountName": "[concat(variables('name'), 'storage')]",
        "logWorkspaceName": "[concat(variables('name'), '-workspace')]",
        "logWorkspaceSku": "pergb2018",
        "logRetentionInDays": 120,
        "blobServiceName": "default",
        "operationBlobContainerName": "operations",
        "serviceBlobContainerName": "service"
    },
    "resources": [
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appInsightsName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "dependsOn": [
                "[variables('logWorkspaceName')]"
            ],
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccountName'), '/', variables('blobServiceName'))]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "isVersioningEnabled": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccountName'), '/', variables('blobServiceName'), '/', variables('operationBlobContainerName'))]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), variables('blobServiceName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-01-01",
            "name": "[concat(variables('storageAccountName'), '/', variables('blobServiceName'), '/', variables('serviceBlobContainerName'))]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), variables('blobServiceName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2020-06-01",
            "name": "[variables('eventGridTopicName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "inputSchema": "EventGridSchema",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
          "type": "Microsoft.OperationalInsights/workspaces",
          "name": "[variables('logWorkspaceName')]",
          "apiVersion": "2020-08-01",
          "location": "[resourceGroup().location]",
          "properties": {
              "sku": {
                  "name": "[variables('logWorkspaceSku')]"
              },
              "retentionInDays": "[variables('logRetentionInDays')]",
              "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": true
              }
          }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "computeMode": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[variables('eventGridTopicName')]",
                "[variables('appServicePlanName')]",
                "[variables('appInsightsName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), variables('blobServiceName'), variables('operationBlobContainerName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), variables('blobServiceName'), variables('serviceBlobContainerName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2014-04-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[concat('InstrumentationKey=', reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2014-04-01').InstrumentationKey)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "RepoOwner",
                            "value": "[parameters('repo_owner')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        },
                        {
                            "name": "EventGridEndpoint",
                            "value": "[reference(variables('eventGridTopicName')).endpoint]"
                        },
                        {
                            "name": "EventGridKey",
                            "value": "[listKeys(resourceId('Microsoft.EventGrid/topics/', variables('eventGridTopicName')), '2020-04-01-preview').key1]"
                        },
                        {
                            "name": "GitHubPat",
                            "value": "[parameters('pat')]"
                        },
                        {
                            "name": "OperationStorageContainerName",
                            "value": "[variables('operationBlobContainerName')]"
                        },
                        {
                            "name": "RepoMapStorageContainerName",
                            "value": "[variables('serviceBlobContainerName')]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        }
    }
}